-- ---------------------------------------------------------------------------------------
-- Table: norpac_commons.schedule_rule. Generated by Pareto Factoryâ„¢ "Be Consistent"
-- ---------------------------------------------------------------------------------------
DROP TABLE IF EXISTS norpac_commons.schedule_rule CASCADE;

CREATE TABLE norpac_commons.schedule_rule (
  id                               UUID             NOT NULL    DEFAULT GEN_RANDOM_UUID(), 
  id_tenant                        UUID             NOT NULL, 
  id_product                       UUID             NOT NULL, 
  schedule_name                    VARCHAR(64)      NOT NULL, 
  start_date                       TIMESTAMP        NOT NULL, 
  recurrence_rule                  TEXT             NULL, 
  duration_minutes                 INTEGER          NULL, 
  timezone                         VARCHAR(64)      NULL, 
  metadata                         JSON             NULL, 
  created_at                       TIMESTAMP        NOT NULL    DEFAULT CURRENT_TIMESTAMP, 
  created_by                       VARCHAR(32)      NOT NULL, 
  updated_at                       TIMESTAMP        NOT NULL    DEFAULT CURRENT_TIMESTAMP, 
  updated_by                       VARCHAR(32)      NOT NULL, 
  is_active                        BOOLEAN          NOT NULL    DEFAULT TRUE
);

ALTER TABLE norpac_commons.schedule_rule ADD PRIMARY KEY (id);


ALTER TABLE norpac_commons.schedule_rule
  ADD CONSTRAINT schedule_rule_id_product
  FOREIGN KEY (id_product)
  REFERENCES norpac_commons.product(id)
  ON DELETE CASCADE;

CREATE TRIGGER update_at
  BEFORE UPDATE ON norpac_commons.schedule_rule 
    FOR EACH ROW
      EXECUTE FUNCTION update_at();

ALTER TABLE norpac_commons.schedule_rule ENABLE ROW LEVEL SECURITY;
CREATE POLICY tenant_isolation_policy ON norpac_commons.schedule_rule
  FOR ALL TO web_update
    USING (id_tenant = current_setting('app.current_tenant')::uuid);
